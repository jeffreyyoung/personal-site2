{"post":{"html":"<p>I recently was trying to write a simple svg animation for a client.  To finish the animation I needed to animate a circle along a bezier path.  I quickly found  <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateMotion\"><animateMotion></a> which made doing such an animation simple, but soon learned <code>animateMotion</code> is not supported by any versions of Internet Explorer. Since I had trouble finding any straight forward ways to do the animation using css, I decided to write the animation using javascript. Which brings us to: </p>\n<h3 id=\"how-to-animate-a-svg-circle-along-an-svg-path-using-javascript\">How to animate a svg circle along an svg path using javascript.</h3>\n<p>To do our animation we'll write a function that will execute one \"step\" of our animation.  Whenever we want to modify the dom, we'll call <code>requestAnimationFrame</code> and pass in our step function.  Letting the browser call our step function via <code>requestAnimationFrame</code> allows the browser to batch dom manipulations together, resulting in fewer unnecessary repaints, which means a more performant animation.</p>\n<pre><code class=\"javascript language-javascript\">function animateProgress(duration /*duration of animation*/, animateElement /*callback function to animate our javascript element*/) {\n  var start = null;\n  function step(timestamp) {\n    if (!start) {\n      start = timestamp;\n    }\n    var timeSinceAnimationStart = timestamp - start;\n    var percentProgress = timeSinceAnimationStart / duration;\n\n    animateElement(percentProgress);\n    if (timeSinceAnimationStart &lt; duration) {\n      requestAnimationFrame(step);\n    } else {\n      animateElement(1); //animation is Finished :D\n    }\n  }\n\n  requestAnimationFrame(step);\n}\n/**\n  from - initial value of animated element at beginning of animation\n  to - final value of animated element at end of animation\n  duration - time in milliseconds of animation\n  animateElement - call back to animate element\n*/\nfunction animate(from, to, duration, animateElement) {\n  animateProgress(duration, function(percentProgress) {\n    var nextValue = from + (to - from) * percentProgress;\n    animateElement(nextValue);\n  })\n}</code></pre>\n<p>We can use our animate function like so:</p>\n<pre><code class=\"javascript language-javascript\">var redSquare = document.getElementById('red-square')\nanimate(0, 100, 1000, function(nextValue) {\n  redSquare.style.left = nextValue+'px';\n})</code></pre>\n<iframe height='265' scrolling='no' title='Animation With requestAnimationFrame' src='//codepen.io/jeffreyyoung/embed/xPWmpM/?height=265&theme-id=0&default-tab=result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/jeffreyyoung/pen/xPWmpM/'>Animation With requestAnimationFrame</a> by Jeff (<a href='https://codepen.io/jeffreyyoung'>@jeffreyyoung</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>In the above code, we are animating the <code>left</code> style of the square element, from 0 to 100, over a period of 1000 milliseconds</p>\n<p>Now if we wanted to animate a svg circle along a path, we could do so with the following code: </p>\n<pre><code class=\"javascript language-javascript\">function animateCircleAlongPath(circle, path) {\n    animate(0, path.getTotalLength(), 3000, function(currentLengthOnPath) {\n    var nextCoords = path.getPointAtLength(currentLengthOnPath);\n        circle.setAttribute('cx', nextCoords.x);\n        circle.setAttribute('cy', nextCoords.y);\n  })\n}</code></pre>\n<iframe height='265' scrolling='no' title='SVG Animation With requestAnimationFrame' src='//codepen.io/jeffreyyoung/embed/QOmzXQ/?height=265&theme-id=0&default-tab=result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/jeffreyyoung/pen/QOmzXQ/'>SVG Animation With requestAnimationFrame</a> by Jeff (<a href='https://codepen.io/jeffreyyoung'>@jeffreyyoung</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>","meta":{"title":"Javascript Alternative to animateMotion","image":"/images/byu-big-data.png","imageDescription":"Screen shot of the current website","category":"blog","id":203948902,"order":10,"description":"How to write a javascript alternative to animateMotion","createdTime":"Wed Nov 22 2017 00:38:32 GMT-0700 (MST)"}}}